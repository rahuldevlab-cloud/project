# File: configs/config_gnn.yaml (Revised)

# Experiment Name / Output Directory (within results/)
exp_name: 'gnn_5_8_28_p3_k3' # Descriptive name: model_agents_obstacles_size_pad_filtertaps

# --- Model Architecture (GNN Specific) ---
# CNN (Input: FOV)
channels: [16, 16, 16]   # Output channels of CNN layers. Input is 3 channels (obs/agents, goal, self) <- COMMENT UPDATED
strides: [1, 1, 1]        # Length MUST match number of CNN layers (implied by channels) <- CHANGED

# Encoder MLP (after flatten)
encoder_layers: 1
last_convs: [400]       # Output features after flatten (VERIFIED for 5x5 FOV, 16 out channels)
encoder_dims: [64]      # Output dim of encoder MLP (input to GNN)

# GNN
graph_filters: [3]      # Number of filter taps (K) for each GCN layer
node_dims: [128]        # Output dimension of each GCN layer
msg_type: 'gcn'         # Type of GNN layer ('gcn' or 'message')

# Policy MLP (after GNN)
action_layers: 1        # Number of hidden layers in action MLP

# --- Training Hyperparameters ---
epochs: 50
learning_rate: 3e-4     # Example value
weight_decay: 1e-4      # Example value
batch_size: 128
num_workers: 3          # Set to 0 if debugging DataLoader issues
eval_frequency: 5       # Evaluate every 5 epochs
net_type: 'gnn'         # Model type

# --- Online Expert (DAgger) ---
online_expert:          # Optional section for OE parameters
  frequency_epochs: 4   # Run OE every 4 epochs
  num_cases_to_run: 500 # Number of cases to check for deadlocks
  cbs_timeout_seconds: 10 # Timeout for expert CBS call

# --- Evaluation ---
tests_episodes: 100      # Number of episodes for evaluation phase

# --- Environment & Simulation Parameters ---
# These MUST match the data generation process for the loaded dataset
num_agents: 5
board_size: [28, 28]    # Grid dimensions [rows, cols]
obstacles: 8            # Number of obstacles
pad: 3                  # Padding used for FOV calculation (gives 5x5 FOV)
map_shape: [5, 5]       # FOV dimensions [rows, cols] - MUST match (2*pad - 1)
sensing_range: 4        # Agent communication/adjacency range
max_time: 60            # Max steps per episode (for env truncation)
max_steps: 60           # Max steps for evaluation episodes in train script
max_steps_train_inference: 180 # Timeout for OE inference runs (e.g., max_steps * 3) <- ADDED

# --- Data Loading ---
# Global filters (can be overridden in train/valid)
min_time: 1             # Min trajectory length to load (global fallback)

train:
    root_dir: 'dataset/5_8_28/train' # Path to training data
    mode: 'train'
    min_time: 5           # Min trajectory length for training samples
    max_time_dl: 55       # Max trajectory length for training samples (adjust based on dataset stats)
    nb_agents: 5          # Number of agents in the dataset (should match num_agents)

valid:
    root_dir: 'dataset/5_8_28/val'   # Path to validation data
    mode: 'valid'           # Use 'valid' as key for CreateDataset lookup
    min_time: 5           # Min trajectory length for validation samples
    max_time_dl: 55       # Max trajectory length for validation samples (adjust based on dataset stats)
    nb_agents: 5          # Number of agents in the dataset